version: "3.7"
services:
  discovery-service:
    build: discovery
    image: discovery-image
    env_file: .env
    networks:
      - bus
    ports:
      - ${DISCOVERY_PORT}:${DISCOVERY_PORT}
    depends_on:
      - ${MONGO_HOST}
      - ${MYSQL_HOST}

  gateway-service:
    build: gateway
    image: gateway-image
    env_file: .env
    networks:
      - bus
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    depends_on:
      - ${DISCOVERY_HOST}

  authentication-service:
    build: authentication
    image: authentication-image
    env_file: .env
    networks:
      - bus
    depends_on:
      - ${DISCOVERY_HOST}

  account-service:
    build: account
    image: account-image
    env_file: .env
    networks:
      - bus
    depends_on:
      - ${DISCOVERY_HOST}

  registration-service:
    build: registration
    image: registration-image
    env_file: .env
    networks:
      - bus
    depends_on:
      - ${DISCOVERY_HOST}

  notification-service:
    build: notification
    image: notification-image
    env_file: .env
    networks:
      - bus
    depends_on:
      - ${DISCOVERY_HOST}

  client-service:
    build: client
    image: client-image
    env_file: .env
    networks:
      - bus
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}

  starter-service:
    build: starter
    image: starter-image
    env_file: .env
    networks:
      - bus
    depends_on:
      - ${MONGO_HOST}
      - ${MYSQL_HOST}

  mysql-service:
    image: mysql:8.0
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASS}
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    networks:
      - bus
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    # volumes:
    #   - './docker/mysql/data:/var/lib/mysql'
    #   - './docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf'
    #   - './docker/mysql/sql:/docker-entrypoint-initdb.d'

  mongo-service:
    image: mongo:5.0.5
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS}
    networks:
      - bus
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    # volumes:
    #   - './docker/mongo/data:/data/db'

networks:
  bus:
    driver: bridge
